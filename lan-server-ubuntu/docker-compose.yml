version: '3'

services:
  nginx:
    image: nginx:${NGINX_TAG}
    restart: unless-stopped
    container_name: nginx
    volumes:
     - ./container-data/nginx/nginx.conf:/etc/nginx/nginx.conf
     - ./container-data/nginx/sites-available:/etc/nginx/sites-available
     - ./container-data/nginx/sites-enabled:/etc/nginx/sites-enabled
    ports:
     - 80:80

  portainer:
    image: portainer/portainer-ce:${PORTAINER_TAG}
    restart: unless-stopped
    container_name: portainer
    ports:
     - 8000:8000
    volumes:
     - /var/run/docker.sock:/var/run/docker.sock
     - portainer_data:/data

  adguard:
    image: adguard/adguardhome:${ADGUARD_TAG}
    restart: unless-stopped
    container_name: adguard
    ports:
     - 53:53/tcp
     - 53:53/udp
     - 82:80/tcp
     - 3000:3000/tcp
     - 67:67/udp
#     - 68:68/tcp
#     - 68:68/udp
     - 443:433/tcp
     - 853:853/tcp
    volumes:
     - adguard_data_work:/opt/adguardhome/work
     - adguard_data_conf:/opt/adguardhome/conf

  jenkins:
    image: jenkins/jenkins:${JENKINS_TAG}
    restart: unless-stopped
    container_name: jenkins
    ports:
     - 5000:5000
    volumes:
     - jenkins_data:/var/jenkins_home

  mariadb:
    image: ghcr.io/linuxserver/mariadb:${MARIADB_TAG}
    restart: unless-stopped
    container_name: mariadb
    volumes:
     - mariadb_data_config:/config
     - mariadb_data:/var/lib/mysql
    ports:
     - 3306:3306
    environment:
     - PUID=1000
     - PGID=1000
     - MYSQL_ROOT_PASSWORD=${MARIADB_MYSQL_ROOT_PASSWORD}
     - TZ=Europe/London

  mongodb:
    image: mongo:${MONGODB_TAG}
    restart: unless-stopped
    container_name: mongodb
    volumes:
     - mongodb_data:/data/db
    ports:
     - 27017:27017
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGODB_ROOT_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGODB_ROOT_PASSWORD}

  netdata:
    image: netdata/netdata:${NETDATA_TAG}
    restart: unless-stopped
    container_name: netdata
#    hostname: example.com # set to fqdn of host
    volumes:
      - netdata_data_config:/etc/netdata
      - netdata_data_lib:/var/lib/netdata
      - netdata_data_cache:/var/cache/netdata
      - /etc/passwd:/host/etc/passwd:ro
      - /etc/group:/host/etc/group:ro
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /etc/os-release:/host/etc/os-release:ro
    cap_add:
      - SYS_PTRACE
    security_opt:
      - apparmor:unconfined

  #Graylog
  # MongoDB: https://hub.docker.com/_/mongo/
  mongodb-graylog:
    image: mongo:${MONGODB_GRAYLOG_TAG}
    restart: unless-stopped
    container_name: mongodb-graylog
    volumes:
      - mongodb_graylog_data:/data/db

  # Elasticsearch: https://www.elastic.co/guide/en/elasticsearch/reference/7.10/docker.html
  elasticsearch-graylog:
    image: docker.elastic.co/elasticsearch/elasticsearch-oss:${ELASTICSEARCH_GRAYLOG_TAG}
    restart: unless-stopped
    container_name: elasticsearch-graylog
    volumes:
      - elasticsearch_graylog_data:/usr/share/elasticsearch/data
    environment:
      - http.host=0.0.0.0
      - transport.host=localhost
      - network.host=0.0.0.0
      - "ES_JAVA_OPTS=-Xms1024m -Xmx1024m"
    ulimits:
      memlock:
        soft: -1
        hard: -1

  # Graylog: https://hub.docker.com/r/graylog/graylog/
  graylog:
    image: graylog/graylog:${GRAYLOG_TAG}
    restart: unless-stopped
    container_name: graylog
    volumes:
      - graylog_data:/usr/share/graylog/data
    environment:
      - GRAYLOG_ROOT_PASSWORD_SHA2=${GRAYLOG_ROOT_PASSWORD_SHA2}
      - GRAYLOG_HTTP_EXTERNAL_URI=http://graylog.home.local/
    entrypoint: /usr/bin/tini -- wait-for-it elasticsearch:9200 --  /docker-entrypoint.sh
    links:
      - mongodb-graylog:mongo
      - elasticsearch-graylog:elasticsearch
    depends_on:
      - mongodb-graylog
      - elasticsearch-graylog
    ports:
      # Graylog web interface and REST API
      #- 9001:9000
      # Syslog TCP
      - 1514:1514
      # Syslog UDP
      - 1514:1514/udp
      # GELF TCP
      - 12201:12201
      # GELF UDP
      - 12201:12201/udp

volumes:
  portainer_data:
  adguard_data:
  jenkins_data:
  mariadb_data:
  adguard_data_work:
  adguard_data_conf:
  mariadb_data_config:
  mariadb_data:
  mongodb_data:
  netdata_data_config:
  netdata_data_lib:
  netdata_data_cache:
  mongodb_graylog_data:
  elasticsearch_graylog_data:
  graylog_data: