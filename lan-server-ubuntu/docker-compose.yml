version: '3'

services:
  npm:
    image: jc21/nginx-proxy-manager:${NPM_TAG}
    restart: unless-stopped
    container_name: npm
    ports:
      # Public HTTP Port:
      - 80:80
      # Public HTTPS Port:
      #- 443:443
      # Admin Web Port:
      - 81:81
    volumes:
      - ${NPM_DATA_DIR}:/data
      - ${NPM_DATA_DIR}/letsencrypt:/etc/letsencrypt
    environment:
      # These are the settings to access your db
      DB_MYSQL_HOST: npm_db
      DB_MYSQL_PORT: 3306
      DB_MYSQL_USER: ${NPM_DB_USER}
      DB_MYSQL_PASSWORD: ${NPM_DB_PASSWORD}
      DB_MYSQL_NAME: ${NPM_DB_DATABASE}
      # If you would rather use Sqlite uncomment this
      # and remove all DB_MYSQL_* lines above
#      DB_SQLITE_FILE: ${NPM_DATA_DIR}/database.sqlite
      # Uncomment this if IPv6 is not enabled on your host
      DISABLE_IPV6: 'true'
    depends_on:
      - npm_db

  npm_db:
    image: jc21/mariadb-aria:${NPM_DB_TAG}
    restart: unless-stopped
    container_name: npm_db
    volumes:
      - ${NPM_DB_DATA_DIR}:/var/lib/mysql
    environment:
      MYSQL_ROOT_PASSWORD: ${NPM_DB_MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${NPM_DB_DATABASE}
      MYSQL_USER: ${NPM_DB_USER}
      MYSQL_PASSWORD: ${NPM_DB_PASSWORD}

  portainer:
    image: portainer/portainer-ce:${PORTAINER_TAG}
    restart: unless-stopped
    container_name: portainer
    ports:
     - 8000:8000
#     - 9000:9000
    volumes:
     - /var/run/docker.sock:/var/run/docker.sock
     - ${PORTAINER_DATA_DIR}:/data

  adguard:
    image: adguard/adguardhome:${ADGUARD_TAG}
    restart: unless-stopped
    container_name: adguard
    ports:
     - 53:53/tcp
     - 53:53/udp
     - 82:80/tcp
     - 3000:3000/tcp
     - 67:67/udp
#     - 68:68/tcp
#     - 68:68/udp
     - 443:433/tcp
     - 853:853/tcp
    volumes:
     - ${ADGUARD_DATA_DIR}/work:/opt/adguardhome/work
     - ${ADGUARD_DATA_DIR}/conf:/opt/adguardhome/conf

  jenkins:
    image: jenkins/jenkins:${JENKINS_TAG}
    restart: unless-stopped
    container_name: jenkins
    ports:
#     - 8080:8080
     - 5000:5000
    volumes:
     - ${JENKINS_DATA_DIR}:/var/jenkins_home

  mariadb:
    image: ghcr.io/linuxserver/mariadb:${MARIADB_TAG}
    restart: unless-stopped
    container_name: mariadb
    ports:
      - 3306:3306
    volumes:
      - ${MARIADB_DATA_DIR}:/config
    environment:
      - PUID=1000
      - PGID=1000
      - MYSQL_ROOT_PASSWORD=${MARIADB_MYSQL_ROOT_PASSWORD}
      - TZ=Europe/London
#      - MYSQL_DATABASE=USER_DB_NAME #optional
#      - MYSQL_USER=MYSQL_USER #optional
#      - MYSQL_PASSWORD=DATABASE_PASSWORD #optional
#      - REMOTE_SQL=http://URL1/your.sql,https://URL2/your.sql #optional

  mongodb:
    image: mongo:${MONGODB_TAG}
    restart: unless-stopped
    container_name: mongodb
    ports:
     - 27017:27017
    volumes:
     - ${MONGODB_DATA_DIR}:/data/db
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGODB_ROOT_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGODB_ROOT_PASSWORD}

  netdata:
    image: netdata/netdata:${NETDATA_TAG}
    restart: unless-stopped
    container_name: netdata
#    hostname: example.com # set to fqdn of host
#    ports:
#      - 19999:19999
    volumes:
      - ${NETDATA_DATA_DIR}/config:/etc/netdata
      - ${NETDATA_DATA_DIR}/lib:/var/lib/netdata
      - ${NETDATA_DATA_DIR}/cache:/var/cache/netdata
      - /etc/passwd:/host/etc/passwd:ro
      - /etc/group:/host/etc/group:ro
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /etc/os-release:/host/etc/os-release:ro
    cap_add:
      - SYS_PTRACE
    security_opt:
      - apparmor:unconfined

  #Graylog
  # MongoDB: https://hub.docker.com/_/mongo/
  mongodb-graylog:
    image: mongo:${MONGODB_GRAYLOG_TAG}
    restart: unless-stopped
    container_name: mongodb-graylog
    volumes:
      - ${MONGODB_GRAYLOG_DATA_DIR}:/data/db

  # Elasticsearch: https://www.elastic.co/guide/en/elasticsearch/reference/7.10/docker.html
  elasticsearch-graylog:
    image: docker.elastic.co/elasticsearch/elasticsearch-oss:${ELASTICSEARCH_GRAYLOG_TAG}
    restart: unless-stopped
    container_name: elasticsearch-graylog
    volumes:
      - ${ELASTICSEARCH_GRAYLOG_DATA_DIR}:/usr/share/elasticsearch/data
    environment:
      - http.host=0.0.0.0
      - transport.host=localhost
      - network.host=0.0.0.0
      - "ES_JAVA_OPTS=-Xms1024m -Xmx1024m"
    ulimits:
      memlock:
        soft: -1
        hard: -1
    mem_limit: 1g

  # Graylog: https://hub.docker.com/r/graylog/graylog/
  graylog:
    image: graylog/graylog:${GRAYLOG_TAG}
    restart: unless-stopped
    container_name: graylog
    volumes:
      - ${GRAYLOG_DATA_DIR}:/usr/share/graylog/data
    environment:
      # CHANGE ME (must be at least 16 characters)!
      - GRAYLOG_PASSWORD_SECRET=${GRAYLOG_PASSWORD_SECRET}
      # Password: admin
      - GRAYLOG_ROOT_PASSWORD_SHA2=${GRAYLOG_ROOT_PASSWORD_SHA2}
      - GRAYLOG_HTTP_EXTERNAL_URI=http://graylog.home.local:9000/
    entrypoint: /usr/bin/tini -- wait-for-it elasticsearch:9200 --  /docker-entrypoint.sh
    links:
      - mongodb-graylog:mongo
      - elasticsearch-graylog:elasticsearch
    depends_on:
      - mongodb-graylog
      - elasticsearch-graylog
    ports:
      # Graylog web interface and REST API
      - 9000:9000
      # Syslog TCP
      - 1514:1514
      # Syslog UDP
      - 1514:1514/udp
      # GELF TCP
      - 12201:12201
      # GELF UDP
      - 12201:12201/udp